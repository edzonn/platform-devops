name: Terraform networking

on:
  pull_request:
    branches:
      - main
    types:
      - closed  # Runs only when a PR is merged
  push:
    branches:
      - main
    paths:
      - 'backend/networking/**/*.tf'  # Detects Terraform configuration file changes
      - 'backend/networking/**/*.tfvars'  # Detects variable file changes
      - 'backend/networking/terraform.lock.hcl'  # Detects lock file updates

jobs:
  terraform:
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true  # Ensure job runs only when PR is merged

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Enable Debug Mode
        run: |
          echo "GITHUB_DEBUG=${{ runner.debug }}" >> $GITHUB_ENV
          echo "Enabling debug logs..."
          export TF_LOG=DEBUG
          export TF_LOG_PATH=terraform-debug.log
          echo "Terraform debug logging enabled"

      - name: Display Environment Variables (Debugging)
        run: env | sort

      - name: Show Current Directory and Files (Debugging)
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing directory contents..."
          ls -la
          echo "Listing backend/networking directory..."
          ls -la backend/networking/

      - name: Mark repository as safe for Git
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init & Validate
        run: |
          terraform init
          terraform validate
        working-directory: backend/networking/

      - name: Terraform Plan
        run: terraform plan -var-file=terraform.tfvars
        working-directory: backend/networking/

      - name: Terraform Apply
        run: terraform apply -var-file=terraform.tfvars -auto-approve
        working-directory: backend/networking/

      - name: Show Terraform Debug Logs (If Available)
        if: always()
        run: |
          echo "Showing Terraform debug logs..."
          cat terraform-debug.log || echo "No debug log found."
